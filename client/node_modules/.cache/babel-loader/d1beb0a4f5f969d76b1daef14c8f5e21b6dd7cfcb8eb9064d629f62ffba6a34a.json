{"ast":null,"code":"var _jsxFileName = \"/Users/nadunliyanage/BananaGame/client/src/components/Loading.js\",\n  _s = $RefreshSig$();\n// src/components/Loading.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loading = () => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Simulate a loading process\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev === 100) {\n          clearInterval(interval);\n          navigate('/login'); // Redirect to login after loading\n          return 100;\n        }\n        return prev + 10; // Increase progress every 500ms\n      });\n    }, 500);\n    return () => clearInterval(interval); // Clear interval on cleanup\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.progressBarContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...styles.progressBar,\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Loading, \"85lGuFqPP6Jgieck5+cfCo9xTnE=\", false, function () {\n  return [useNavigate];\n});\n_c = Loading;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh'\n  },\n  progressBarContainer: {\n    width: '80%',\n    height: '30px',\n    backgroundColor: '#e0e0e0',\n    borderRadius: '5px',\n    marginTop: '20px'\n  },\n  progressBar: {\n    height: '100%',\n    backgroundColor: '#4caf50',\n    borderRadius: '5px'\n  }\n};\nexport default Loading;\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Loading","_s","progress","setProgress","navigate","interval","setInterval","prev","clearInterval","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","progressBarContainer","progressBar","width","_c","display","flexDirection","alignItems","justifyContent","height","backgroundColor","borderRadius","marginTop","$RefreshReg$"],"sources":["/Users/nadunliyanage/BananaGame/client/src/components/Loading.js"],"sourcesContent":["// src/components/Loading.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Loading = () => {\n    const [progress, setProgress] = useState(0);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Simulate a loading process\n        const interval = setInterval(() => {\n            setProgress((prev) => {\n                if (prev === 100) {\n                    clearInterval(interval);\n                    navigate('/login'); // Redirect to login after loading\n                    return 100;\n                }\n                return prev + 10; // Increase progress every 500ms\n            });\n        }, 500);\n\n        return () => clearInterval(interval); // Clear interval on cleanup\n    }, [navigate]);\n\n    return (\n        <div style={styles.container}>\n            <h2>Loading...</h2>\n            <div style={styles.progressBarContainer}>\n                <div style={{ ...styles.progressBar, width: `${progress}%` }}></div>\n            </div>\n        </div>\n    );\n};\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n    },\n    progressBarContainer: {\n        width: '80%',\n        height: '30px',\n        backgroundColor: '#e0e0e0',\n        borderRadius: '5px',\n        marginTop: '20px',\n    },\n    progressBar: {\n        height: '100%',\n        backgroundColor: '#4caf50',\n        borderRadius: '5px',\n    },\n};\n\nexport default Loading;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BH,WAAW,CAAEI,IAAI,IAAK;QAClB,IAAIA,IAAI,KAAK,GAAG,EAAE;UACdC,aAAa,CAACH,QAAQ,CAAC;UACvBD,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;UACpB,OAAO,GAAG;QACd;QACA,OAAOG,IAAI,GAAG,EAAE,CAAC,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACIL,OAAA;IAAKU,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBACzBb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MAAKU,KAAK,EAAEC,MAAM,CAACO,oBAAqB;MAAAL,QAAA,eACpCb,OAAA;QAAKU,KAAK,EAAE;UAAE,GAAGC,MAAM,CAACQ,WAAW;UAAEC,KAAK,EAAE,GAAGjB,QAAQ;QAAI;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACf,EAAA,CA5BID,OAAO;EAAA,QAEQH,WAAW;AAAA;AAAAuB,EAAA,GAF1BpB,OAAO;AA8Bb,MAAMU,MAAM,GAAG;EACXC,SAAS,EAAE;IACPU,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,MAAM,EAAE;EACZ,CAAC;EACDR,oBAAoB,EAAE;IAClBE,KAAK,EAAE,KAAK;IACZM,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE;EACf,CAAC;EACDV,WAAW,EAAE;IACTO,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE;EAClB;AACJ,CAAC;AAED,eAAe3B,OAAO;AAAC,IAAAoB,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}