{"ast":null,"code":"var _jsxFileName = \"/Users/nadunliyanage/BananaGame/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Game from './pages/Game';\nimport Levels from './pages/Levels';\nimport Score from './pages/Score';\nimport Profile from './pages/Profile';\nimport Loading from './components/Loading'; // Import Loading component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [player, setPlayer] = useState({\n    name: localStorage.getItem('playerName') || \"John Doe\",\n    avatar: localStorage.getItem('playerAvatar') || \"https://example.com/avatar.jpg\"\n  });\n  const [scoreboard, setScoreboard] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // New state for loading phase\n\n  // Load the stored scoreboard when the app starts\n  useEffect(() => {\n    const storedScores = JSON.parse(localStorage.getItem('scoreboard')) || [];\n    setScoreboard(storedScores);\n    setTimeout(() => setIsLoading(false), 3000); // Simulate loading for 3 seconds\n  }, []);\n\n  // Save player data to localStorage whenever it changes\n  useEffect(() => {\n    if (player.name && player.avatar) {\n      localStorage.setItem('playerName', player.name);\n      localStorage.setItem('playerAvatar', player.avatar);\n    }\n  }, [player]);\n\n  // Update the scoreboard when a player finishes a game\n  const updateScoreboard = (name, score, avatar) => {\n    const newScore = {\n      name,\n      score,\n      avatar\n    };\n    const updatedScores = [...scoreboard, newScore].sort((a, b) => b.score - a.score);\n    setScoreboard(updatedScores);\n    localStorage.setItem('scoreboard', JSON.stringify(updatedScores));\n  };\n\n  // Clear the scoreboard\n  const clearScoreboard = () => {\n    setScoreboard([]);\n    localStorage.removeItem('scoreboard');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) // Display loading screen while loading\n    : /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          player: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/game\",\n        element: /*#__PURE__*/_jsxDEV(Game, {\n          player: player,\n          updateScoreboard: updateScoreboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/levels\",\n        element: /*#__PURE__*/_jsxDEV(Levels, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/score\",\n        element: /*#__PURE__*/_jsxDEV(Score, {\n          scoreboard: scoreboard,\n          clearScoreboard: clearScoreboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {\n          player: player,\n          setPlayer: setPlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YcZ4+mIGhkBvY2A867h/XB2cgkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Login","Home","Game","Levels","Score","Profile","Loading","jsxDEV","_jsxDEV","App","_s","player","setPlayer","name","localStorage","getItem","avatar","scoreboard","setScoreboard","isLoading","setIsLoading","storedScores","JSON","parse","setTimeout","setItem","updateScoreboard","score","newScore","updatedScores","sort","a","b","stringify","clearScoreboard","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/nadunliyanage/BananaGame/client/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Game from './pages/Game';\nimport Levels from './pages/Levels';\nimport Score from './pages/Score';\nimport Profile from './pages/Profile';\nimport Loading from './components/Loading'; // Import Loading component\n\nfunction App() {\n  const [player, setPlayer] = useState({\n    name: localStorage.getItem('playerName') || \"John Doe\",\n    avatar: localStorage.getItem('playerAvatar') || \"https://example.com/avatar.jpg\"\n  });\n\n  const [scoreboard, setScoreboard] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // New state for loading phase\n\n  // Load the stored scoreboard when the app starts\n  useEffect(() => {\n    const storedScores = JSON.parse(localStorage.getItem('scoreboard')) || [];\n    setScoreboard(storedScores);\n    setTimeout(() => setIsLoading(false), 3000); // Simulate loading for 3 seconds\n  }, []);\n\n  // Save player data to localStorage whenever it changes\n  useEffect(() => {\n    if (player.name && player.avatar) {\n      localStorage.setItem('playerName', player.name);\n      localStorage.setItem('playerAvatar', player.avatar);\n    }\n  }, [player]);\n\n  // Update the scoreboard when a player finishes a game\n  const updateScoreboard = (name, score, avatar) => {\n    const newScore = { name, score, avatar };\n    const updatedScores = [...scoreboard, newScore].sort((a, b) => b.score - a.score);\n    setScoreboard(updatedScores);\n    localStorage.setItem('scoreboard', JSON.stringify(updatedScores));\n  };\n\n  // Clear the scoreboard\n  const clearScoreboard = () => {\n    setScoreboard([]);\n    localStorage.removeItem('scoreboard');\n  };\n\n  return (\n    <Router>\n      {isLoading ? (\n        <Loading /> // Display loading screen while loading\n      ) : (\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/home\" element={<Home player={player} />} />\n          <Route path=\"/game\" element={<Game player={player} updateScoreboard={updateScoreboard} />} />\n          <Route path=\"/levels\" element={<Levels />} />\n          <Route path=\"/score\" element={<Score scoreboard={scoreboard} clearScoreboard={clearScoreboard} />} />\n          <Route path=\"/profile\" element={<Profile player={player} setPlayer={setPlayer} />} />\n        </Routes>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,OAAO,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC;IACnCmB,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,UAAU;IACtDC,MAAM,EAAEF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI;EAClD,CAAC,CAAC;EAEF,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAM0B,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACT,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;IACzEG,aAAa,CAACG,YAAY,CAAC;IAC3BG,UAAU,CAAC,MAAMJ,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAzB,SAAS,CAAC,MAAM;IACd,IAAIgB,MAAM,CAACE,IAAI,IAAIF,MAAM,CAACK,MAAM,EAAE;MAChCF,YAAY,CAACW,OAAO,CAAC,YAAY,EAAEd,MAAM,CAACE,IAAI,CAAC;MAC/CC,YAAY,CAACW,OAAO,CAAC,cAAc,EAAEd,MAAM,CAACK,MAAM,CAAC;IACrD;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMe,gBAAgB,GAAGA,CAACb,IAAI,EAAEc,KAAK,EAAEX,MAAM,KAAK;IAChD,MAAMY,QAAQ,GAAG;MAAEf,IAAI;MAAEc,KAAK;MAAEX;IAAO,CAAC;IACxC,MAAMa,aAAa,GAAG,CAAC,GAAGZ,UAAU,EAAEW,QAAQ,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACL,KAAK,GAAGI,CAAC,CAACJ,KAAK,CAAC;IACjFT,aAAa,CAACW,aAAa,CAAC;IAC5Bf,YAAY,CAACW,OAAO,CAAC,YAAY,EAAEH,IAAI,CAACW,SAAS,CAACJ,aAAa,CAAC,CAAC;EACnE,CAAC;;EAED;EACA,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5BhB,aAAa,CAAC,EAAE,CAAC;IACjBJ,YAAY,CAACqB,UAAU,CAAC,YAAY,CAAC;EACvC,CAAC;EAED,oBACE3B,OAAA,CAACX,MAAM;IAAAuC,QAAA,EACJjB,SAAS,gBACRX,OAAA,CAACF,OAAO;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,eAEZhC,OAAA,CAACT,MAAM;MAAAqC,QAAA,gBACL5B,OAAA,CAACV,KAAK;QAAC2C,IAAI,EAAC,GAAG;QAACC,OAAO,eAAElC,OAAA,CAACR,KAAK;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtChC,OAAA,CAACV,KAAK;QAAC2C,IAAI,EAAC,OAAO;QAACC,OAAO,eAAElC,OAAA,CAACP,IAAI;UAACU,MAAM,EAAEA;QAAO;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDhC,OAAA,CAACV,KAAK;QAAC2C,IAAI,EAAC,OAAO;QAACC,OAAO,eAAElC,OAAA,CAACN,IAAI;UAACS,MAAM,EAAEA,MAAO;UAACe,gBAAgB,EAAEA;QAAiB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7FhC,OAAA,CAACV,KAAK;QAAC2C,IAAI,EAAC,SAAS;QAACC,OAAO,eAAElC,OAAA,CAACL,MAAM;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7ChC,OAAA,CAACV,KAAK;QAAC2C,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAElC,OAAA,CAACJ,KAAK;UAACa,UAAU,EAAEA,UAAW;UAACiB,eAAe,EAAEA;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrGhC,OAAA,CAACV,KAAK;QAAC2C,IAAI,EAAC,UAAU;QAACC,OAAO,eAAElC,OAAA,CAACH,OAAO;UAACM,MAAM,EAAEA,MAAO;UAACC,SAAS,EAAEA;QAAU;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAAC9B,EAAA,CAtDQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}