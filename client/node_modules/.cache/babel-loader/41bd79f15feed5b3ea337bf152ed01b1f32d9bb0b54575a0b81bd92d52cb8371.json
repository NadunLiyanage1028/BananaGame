{"ast":null,"code":"var _jsxFileName = \"/Users/nadunliyanage/BananaGame/client/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom'; // For handling URL params\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const initialLevel = parseInt(queryParams.get('level')) || 1; // Get level from URL query, default to 1\n\n  const [questionData, setQuestionData] = useState(null);\n  const [userGuess, setUserGuess] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(initialLevel); // Use level from URL\n  const [remainingAttempts, setRemainingAttempts] = useState(5);\n  const scoreThresholds = [0, 20, 40, 60, 80, 100]; // Define score thresholds for each level\n  const attemptsPerLevel = [5, 4, 3, 2, 1]; // Decrease attempts as levels progress\n\n  // Fetch a new question when the level changes\n  useEffect(() => {\n    fetchQuestion();\n  }, [level]);\n  const fetchQuestion = async () => {\n    setLoading(true);\n    try {\n      console.log(\"Fetching new question from API...\");\n      const response = await axios.get('/uob/banana/api.php?out=json');\n      console.log(\"API response:\", response.data);\n      if (response.data && response.data.question && response.data.solution) {\n        setQuestionData(response.data);\n        setFeedback('');\n        setRemainingAttempts(attemptsPerLevel[level - 1]);\n      } else {\n        setFeedback('Error: Could not load game question.');\n      }\n    } catch (error) {\n      console.error(\"Error fetching the question:\", error);\n      setFeedback('Failed to load game question. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGuess = () => {\n    if (userGuess === questionData.solution) {\n      setFeedback('Correct! Well done!');\n      const newScore = score + 10;\n      setScore(newScore);\n\n      // Check if the score reaches the threshold for the next level\n      if (newScore >= scoreThresholds[level]) {\n        setLevel(level + 1);\n        // Save the new level to localStorage to track progress\n        localStorage.setItem('currentLevel', level + 1);\n        navigate(`/levels`); // Redirect to the levels page after advancing\n      } else {\n        fetchQuestion(); // Get a new question for the same level\n      }\n      setUserGuess('');\n    } else {\n      setFeedback('Incorrect, try again!');\n      setRemainingAttempts(prev => prev - 1);\n      if (remainingAttempts <= 1) {\n        setFeedback('Out of attempts! Restarting level.');\n        const penaltyScore = Math.max(0, score - 5); // Penalize 5 points but don't go below 0\n        setScore(penaltyScore);\n        fetchQuestion();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Banana Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score, \" | Level: \", level, \" | Remaining Attempts: \", remainingAttempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : questionData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Guess the number shown in the image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: questionData.question,\n        alt: \"Banana Game Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userGuess,\n        onChange: e => setUserGuess(e.target.value),\n        placeholder: \"Enter your guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuess,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback || 'Error loading game question'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"Fywa5zFEMrI6qS8r2r5fwUX+RnI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","Game","_s","navigate","location","queryParams","URLSearchParams","search","initialLevel","parseInt","get","questionData","setQuestionData","userGuess","setUserGuess","feedback","setFeedback","loading","setLoading","score","setScore","level","setLevel","remainingAttempts","setRemainingAttempts","scoreThresholds","attemptsPerLevel","fetchQuestion","console","log","response","data","question","solution","error","handleGuess","newScore","localStorage","setItem","prev","penaltyScore","Math","max","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/nadunliyanage/BananaGame/client/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';  // For handling URL params\n\nconst Game = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const initialLevel = parseInt(queryParams.get('level')) || 1; // Get level from URL query, default to 1\n\n    const [questionData, setQuestionData] = useState(null);\n    const [userGuess, setUserGuess] = useState('');\n    const [feedback, setFeedback] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [score, setScore] = useState(0);\n    const [level, setLevel] = useState(initialLevel); // Use level from URL\n    const [remainingAttempts, setRemainingAttempts] = useState(5);\n\n    const scoreThresholds = [0, 20, 40, 60, 80, 100];  // Define score thresholds for each level\n    const attemptsPerLevel = [5, 4, 3, 2, 1];  // Decrease attempts as levels progress\n\n    // Fetch a new question when the level changes\n    useEffect(() => {\n        fetchQuestion();\n    }, [level]);\n\n    const fetchQuestion = async () => {\n        setLoading(true);\n        try {\n            console.log(\"Fetching new question from API...\");\n            const response = await axios.get('/uob/banana/api.php?out=json');\n            console.log(\"API response:\", response.data);\n\n            if (response.data && response.data.question && response.data.solution) {\n                setQuestionData(response.data);\n                setFeedback('');\n                setRemainingAttempts(attemptsPerLevel[level - 1]);\n            } else {\n                setFeedback('Error: Could not load game question.');\n            }\n        } catch (error) {\n            console.error(\"Error fetching the question:\", error);\n            setFeedback('Failed to load game question. Please try again.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleGuess = () => {\n        if (userGuess === questionData.solution) {\n            setFeedback('Correct! Well done!');\n            const newScore = score + 10;\n            setScore(newScore);\n\n            // Check if the score reaches the threshold for the next level\n            if (newScore >= scoreThresholds[level]) {\n                setLevel(level + 1);\n                // Save the new level to localStorage to track progress\n                localStorage.setItem('currentLevel', level + 1);\n                navigate(`/levels`);  // Redirect to the levels page after advancing\n            } else {\n                fetchQuestion(); // Get a new question for the same level\n            }\n\n            setUserGuess('');\n        } else {\n            setFeedback('Incorrect, try again!');\n            setRemainingAttempts((prev) => prev - 1);\n\n            if (remainingAttempts <= 1) {\n                setFeedback('Out of attempts! Restarting level.');\n                const penaltyScore = Math.max(0, score - 5); // Penalize 5 points but don't go below 0\n                setScore(penaltyScore);\n                fetchQuestion();\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h1>Banana Game</h1>\n            <p>Score: {score} | Level: {level} | Remaining Attempts: {remainingAttempts}</p>\n            {loading ? (\n                <p>Loading question...</p>\n            ) : questionData ? (\n                <div>\n                    <p>Guess the number shown in the image:</p>\n                    <img src={questionData.question} alt=\"Banana Game Question\" />\n                    <input\n                        type=\"text\"\n                        value={userGuess}\n                        onChange={(e) => setUserGuess(e.target.value)}\n                        placeholder=\"Enter your guess\"\n                    />\n                    <button onClick={handleGuess}>Submit Guess</button>\n                    <p>{feedback}</p>\n                </div>\n            ) : (\n                <p>{feedback || 'Error loading game question'}</p>\n            )}\n        </div>\n    );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}