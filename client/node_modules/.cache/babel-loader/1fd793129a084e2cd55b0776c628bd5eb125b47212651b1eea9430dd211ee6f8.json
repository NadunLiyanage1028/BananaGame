{"ast":null,"code":"var _jsxFileName = \"/Users/nadunliyanage/BananaGame/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Game from './pages/Game';\nimport Levels from './pages/Levels';\nimport Score from './pages/Score';\nimport Profile from './pages/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [player, setPlayer] = useState({\n    name: localStorage.getItem('playerName') || \"John Doe\",\n    avatar: localStorage.getItem('playerAvatar') || \"https://example.com/avatar.jpg\"\n  });\n  const [scoreboard, setScoreboard] = useState([]);\n\n  // Load the stored scoreboard when the app starts\n  useEffect(() => {\n    const storedScores = JSON.parse(localStorage.getItem('scoreboard')) || [];\n    setScoreboard(storedScores);\n  }, []);\n\n  // Save player data to localStorage whenever it changes\n  useEffect(() => {\n    if (player.name && player.avatar) {\n      localStorage.setItem('playerName', player.name);\n      localStorage.setItem('playerAvatar', player.avatar);\n    }\n  }, [player]);\n\n  // Update the scoreboard when a player finishes a game\n  const updateScoreboard = (name, score, avatar) => {\n    const newScore = {\n      name,\n      score,\n      avatar\n    };\n    const updatedScores = [...scoreboard, newScore].sort((a, b) => b.score - a.score);\n    setScoreboard(updatedScores);\n    localStorage.setItem('scoreboard', JSON.stringify(updatedScores));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          player: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/game\",\n        element: /*#__PURE__*/_jsxDEV(Game, {\n          player: player,\n          updateScoreboard: updateScoreboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/levels\",\n        element: /*#__PURE__*/_jsxDEV(Levels, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/score\",\n        element: /*#__PURE__*/_jsxDEV(Score, {\n          scoreboard: scoreboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {\n          player: player,\n          setPlayer: setPlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lEkgyDr43y2ahG+Qt2747HI1cVY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Login","Home","Game","Levels","Score","Profile","jsxDEV","_jsxDEV","App","_s","player","setPlayer","name","localStorage","getItem","avatar","scoreboard","setScoreboard","storedScores","JSON","parse","setItem","updateScoreboard","score","newScore","updatedScores","sort","a","b","stringify","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nadunliyanage/BananaGame/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Game from './pages/Game';\nimport Levels from './pages/Levels';\nimport Score from './pages/Score';\nimport Profile from './pages/Profile';\n\nfunction App() {\n  const [player, setPlayer] = useState({\n    name: localStorage.getItem('playerName') || \"John Doe\",\n    avatar: localStorage.getItem('playerAvatar') || \"https://example.com/avatar.jpg\"\n  });\n\n  const [scoreboard, setScoreboard] = useState([]);\n\n  // Load the stored scoreboard when the app starts\n  useEffect(() => {\n    const storedScores = JSON.parse(localStorage.getItem('scoreboard')) || [];\n    setScoreboard(storedScores);\n  }, []);\n\n  // Save player data to localStorage whenever it changes\n  useEffect(() => {\n    if (player.name && player.avatar) {\n      localStorage.setItem('playerName', player.name);\n      localStorage.setItem('playerAvatar', player.avatar);\n    }\n  }, [player]);\n\n  // Update the scoreboard when a player finishes a game\n  const updateScoreboard = (name, score, avatar) => {\n    const newScore = { name, score, avatar };\n    const updatedScores = [...scoreboard, newScore].sort((a, b) => b.score - a.score);\n    setScoreboard(updatedScores);\n    localStorage.setItem('scoreboard', JSON.stringify(updatedScores));\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/home\" element={<Home player={player} />} />\n        <Route path=\"/game\" element={<Game player={player} updateScoreboard={updateScoreboard} />} />\n        <Route path=\"/levels\" element={<Levels />} />\n        <Route path=\"/score\" element={<Score scoreboard={scoreboard} />} />\n        <Route path=\"/profile\" element={<Profile player={player} setPlayer={setPlayer} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}