{"ast":null,"code":"var _jsxFileName = \"/Users/nadunliyanage/BananaGame/client/src/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  player,\n  setPlayer\n}) => {\n  _s();\n  const [newName, setNewName] = useState(player.name);\n  const [selectedAvatar, setSelectedAvatar] = useState(player.avatar);\n  const avatars = ['https://example.com/avatar1.jpg', 'https://example.com/avatar2.jpg', 'https://example.com/avatar3.jpg'];\n  useEffect(() => {\n    // Get the stored player data from localStorage if it exists\n    const storedName = localStorage.getItem('playerName');\n    const storedAvatar = localStorage.getItem('playerAvatar');\n    if (storedName && storedAvatar) {\n      setNewName(storedName);\n      setSelectedAvatar(storedAvatar);\n    }\n  }, []);\n  const handleAvatarSelect = avatar => {\n    setSelectedAvatar(avatar);\n  };\n  const handleSave = () => {\n    // Save the player data to localStorage\n    localStorage.setItem('playerName', newName);\n    localStorage.setItem('playerAvatar', selectedAvatar);\n\n    // Update player data state\n    setPlayer({\n      name: newName,\n      avatar: selectedAvatar\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose Your Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: avatars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          alt: `Avatar ${index + 1}`,\n          style: {\n            width: '100px',\n            height: '100px',\n            margin: '10px',\n            cursor: 'pointer',\n            border: avatar === selectedAvatar ? '3px solid green' : 'none'\n          },\n          onClick: () => handleAvatarSelect(avatar)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Change Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newName,\n        onChange: e => setNewName(e.target.value),\n        placeholder: \"Enter your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"bP8y5gfLugjREzbpLltELWR6d/4=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Profile","player","setPlayer","_s","newName","setNewName","name","selectedAvatar","setSelectedAvatar","avatar","avatars","storedName","localStorage","getItem","storedAvatar","handleAvatarSelect","handleSave","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","alt","style","width","height","margin","cursor","border","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/nadunliyanage/BananaGame/client/src/pages/Profile.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nconst Profile = ({ player, setPlayer }) => {\n    const [newName, setNewName] = useState(player.name);\n    const [selectedAvatar, setSelectedAvatar] = useState(player.avatar);\n\n    const avatars = [\n        'https://example.com/avatar1.jpg', \n        'https://example.com/avatar2.jpg', \n        'https://example.com/avatar3.jpg'\n    ];\n\n    useEffect(() => {\n        // Get the stored player data from localStorage if it exists\n        const storedName = localStorage.getItem('playerName');\n        const storedAvatar = localStorage.getItem('playerAvatar');\n        \n        if (storedName && storedAvatar) {\n            setNewName(storedName);\n            setSelectedAvatar(storedAvatar);\n        }\n    }, []);\n\n    const handleAvatarSelect = (avatar) => {\n        setSelectedAvatar(avatar);\n    };\n\n    const handleSave = () => {\n        // Save the player data to localStorage\n        localStorage.setItem('playerName', newName);\n        localStorage.setItem('playerAvatar', selectedAvatar);\n        \n        // Update player data state\n        setPlayer({ name: newName, avatar: selectedAvatar });\n    };\n\n    return (\n        <div>\n            <h1>Profile</h1>\n            <div>\n                <h2>Choose Your Avatar</h2>\n                <div>\n                    {avatars.map((avatar, index) => (\n                        <img\n                            key={index}\n                            src={avatar}\n                            alt={`Avatar ${index + 1}`}\n                            style={{\n                                width: '100px',\n                                height: '100px',\n                                margin: '10px',\n                                cursor: 'pointer',\n                                border: avatar === selectedAvatar ? '3px solid green' : 'none'\n                            }}\n                            onClick={() => handleAvatarSelect(avatar)}\n                        />\n                    ))}\n                </div>\n            </div>\n            <div>\n                <h2>Change Your Name</h2>\n                <input\n                    type=\"text\"\n                    value={newName}\n                    onChange={(e) => setNewName(e.target.value)}\n                    placeholder=\"Enter your name\"\n                />\n            </div>\n            <button onClick={handleSave}>Save</button>\n        </div>\n    );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}