{"ast":null,"code":"var _jsxFileName = \"/Users/nadunliyanage/BananaGame/client/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [questionData, setQuestionData] = useState(null);\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [feedback, setFeedback] = useState('');\n\n  // CORS Proxy URL (for local development)\n  const API_URL = 'https://cors-anywhere.herokuapp.com/http://marcconrad.com/uob/banana/api.php?out=json';\n\n  // Fetch question from the API\n  const fetchQuestion = async () => {\n    try {\n      console.log(\"Fetching new question from API...\");\n\n      // Make the API request using axios\n      const response = await axios.get(API_URL);\n\n      // Log the entire response and the data for debugging\n      console.log(\"API response:\", response);\n      console.log(\"Response data:\", response.data);\n      if (response.data && response.data.question && response.data.solution) {\n        setQuestionData(response.data); // Store question data\n        setFeedback(''); // Clear any previous feedback\n      } else {\n        setFeedback('Error: Could not load game question.');\n        console.log(\"Error: Invalid response structure.\", response.data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching the question:\", error);\n      setFeedback('Failed to load game question. Please try again.');\n    }\n  };\n\n  // Start game or fetch new question\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n  const handleAnswer = answer => {\n    if (answer === questionData.solution) {\n      setScore(score + 10); // Increase score\n      setLevel(level + 1); // Increase level\n      setFeedback('Correct! Moving to next level.');\n    } else {\n      setFeedback('Incorrect. Try again!');\n    }\n\n    // Fetch the next question after a short delay\n    setTimeout(fetchQuestion, 1000); // Delay for a second before fetching new question\n  };\n\n  // If no question data is available yet, show loading state\n  if (!questionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Banana Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score, \" | Level: \", level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Banana Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score, \" | Level: \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questionData.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(1),\n        children: questionData.option1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(2),\n        children: questionData.option2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(3),\n        children: questionData.option3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(4),\n        children: questionData.option4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"AEz5efKn1Rxm75I+1dXf9A32vCw=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Game","_s","questionData","setQuestionData","score","setScore","level","setLevel","feedback","setFeedback","API_URL","fetchQuestion","console","log","response","get","data","question","solution","error","handleAnswer","answer","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","option1","option2","option3","option4","_c","$RefreshReg$"],"sources":["/Users/nadunliyanage/BananaGame/client/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Game = () => {\n    const [questionData, setQuestionData] = useState(null);\n    const [score, setScore] = useState(0);\n    const [level, setLevel] = useState(1);\n    const [feedback, setFeedback] = useState('');\n    \n    // CORS Proxy URL (for local development)\n    const API_URL = 'https://cors-anywhere.herokuapp.com/http://marcconrad.com/uob/banana/api.php?out=json';\n    \n    // Fetch question from the API\n    const fetchQuestion = async () => {\n        try {\n            console.log(\"Fetching new question from API...\");\n\n            // Make the API request using axios\n            const response = await axios.get(API_URL);\n            \n            // Log the entire response and the data for debugging\n            console.log(\"API response:\", response);\n            console.log(\"Response data:\", response.data);\n\n            if (response.data && response.data.question && response.data.solution) {\n                setQuestionData(response.data); // Store question data\n                setFeedback(''); // Clear any previous feedback\n            } else {\n                setFeedback('Error: Could not load game question.');\n                console.log(\"Error: Invalid response structure.\", response.data);\n            }\n        } catch (error) {\n            console.error(\"Error fetching the question:\", error);\n            setFeedback('Failed to load game question. Please try again.');\n        }\n    };\n\n    // Start game or fetch new question\n    useEffect(() => {\n        fetchQuestion();\n    }, []);\n\n    const handleAnswer = (answer) => {\n        if (answer === questionData.solution) {\n            setScore(score + 10); // Increase score\n            setLevel(level + 1);  // Increase level\n            setFeedback('Correct! Moving to next level.');\n        } else {\n            setFeedback('Incorrect. Try again!');\n        }\n\n        // Fetch the next question after a short delay\n        setTimeout(fetchQuestion, 1000); // Delay for a second before fetching new question\n    };\n\n    // If no question data is available yet, show loading state\n    if (!questionData) {\n        return (\n            <div>\n                <h1>Banana Game</h1>\n                <p>Score: {score} | Level: {level}</p>\n                <p>{feedback}</p>\n                <p>Loading question...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <h1>Banana Game</h1>\n            <p>Score: {score} | Level: {level}</p>\n            <p>{feedback}</p>\n            <div>\n                <h2>{questionData.question}</h2>\n                <button onClick={() => handleAnswer(1)}>{questionData.option1}</button>\n                <button onClick={() => handleAnswer(2)}>{questionData.option2}</button>\n                <button onClick={() => handleAnswer(3)}>{questionData.option3}</button>\n                <button onClick={() => handleAnswer(4)}>{questionData.option4}</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}