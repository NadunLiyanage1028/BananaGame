{"ast":null,"code":"var _jsxFileName = \"/Users/nadunliyanage/BananaGame/client/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [questionData, setQuestionData] = useState(null); // Holds the question and solution data from API\n  const [userGuess, setUserGuess] = useState(''); // Holds the player's current guess\n  const [feedback, setFeedback] = useState(''); // Holds feedback for player (e.g., correct or incorrect guess)\n\n  // Fetches a new question from the Banana Game API when the component loads\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n\n  // Function to fetch question and solution data from the Banana Game API\n  const fetchQuestion = async () => {\n    try {\n      const response = await axios.get('http://marcconrad.com/uob/banana/api.php?out=json');\n      setQuestionData(response.data); // Store API response in state\n      setFeedback(''); // Clear feedback message on new question load\n    } catch (error) {\n      console.error(\"Error fetching the question:\", error);\n      setFeedback('Failed to load game question. Please try again.');\n    }\n  };\n\n  // Function to handle the player's guess\n  const handleGuess = () => {\n    if (userGuess === questionData.solution) {\n      setFeedback('Correct! Well done!'); // Provide positive feedback\n      fetchQuestion(); // Fetch a new question if the guess is correct\n      setUserGuess(''); // Clear the input field\n    } else {\n      setFeedback('Incorrect, try again!'); // Provide feedback to try again\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Banana Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), questionData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Guess the number shown in the image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: questionData.question,\n        alt: \"Banana Game Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userGuess,\n        onChange: e => setUserGuess(e.target.value),\n        placeholder: \"Enter your guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuess,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"1oOFYaZY/3eX3/zZEDvBjim9BsI=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Game","_s","questionData","setQuestionData","userGuess","setUserGuess","feedback","setFeedback","fetchQuestion","response","get","data","error","console","handleGuess","solution","children","fileName","_jsxFileName","lineNumber","columnNumber","src","question","alt","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/nadunliyanage/BananaGame/client/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Game = () => {\n    const [questionData, setQuestionData] = useState(null);  // Holds the question and solution data from API\n    const [userGuess, setUserGuess] = useState('');          // Holds the player's current guess\n    const [feedback, setFeedback] = useState('');            // Holds feedback for player (e.g., correct or incorrect guess)\n\n    // Fetches a new question from the Banana Game API when the component loads\n    useEffect(() => {\n        fetchQuestion();\n    }, []);\n\n    // Function to fetch question and solution data from the Banana Game API\n    const fetchQuestion = async () => {\n        try {\n            const response = await axios.get('http://marcconrad.com/uob/banana/api.php?out=json');\n            setQuestionData(response.data); // Store API response in state\n            setFeedback('');  // Clear feedback message on new question load\n        } catch (error) {\n            console.error(\"Error fetching the question:\", error);\n            setFeedback('Failed to load game question. Please try again.');\n        }\n    };\n\n    // Function to handle the player's guess\n    const handleGuess = () => {\n        if (userGuess === questionData.solution) {\n            setFeedback('Correct! Well done!'); // Provide positive feedback\n            fetchQuestion();      // Fetch a new question if the guess is correct\n            setUserGuess('');     // Clear the input field\n        } else {\n            setFeedback('Incorrect, try again!'); // Provide feedback to try again\n        }\n    };\n\n    return (\n        <div>\n            <h1>Banana Game</h1>\n            {questionData ? (\n                <div>\n                    <p>Guess the number shown in the image:</p>\n                    <img src={questionData.question} alt=\"Banana Game Question\" />\n                    <input\n                        type=\"text\"\n                        value={userGuess}\n                        onChange={(e) => setUserGuess(e.target.value)}\n                        placeholder=\"Enter your guess\"\n                    />\n                    <button onClick={handleGuess}>Submit Guess</button>\n                    <p>{feedback}</p>\n                </div>\n            ) : (\n                <p>Loading question...</p>\n            )}\n        </div>\n    );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}