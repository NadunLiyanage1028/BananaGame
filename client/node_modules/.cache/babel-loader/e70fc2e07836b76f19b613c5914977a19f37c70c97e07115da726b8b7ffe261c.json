{"ast":null,"code":"var _jsxFileName = \"/Users/nadunliyanage/BananaGame/client/src/pages/Levels.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Use navigate hook for routing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Levels = () => {\n  _s();\n  const [currentLevel, setCurrentLevel] = useState(1); // Track current level\n  const levels = [{\n    level: 1,\n    name: 'Level 1',\n    unlocked: true\n  }, {\n    level: 2,\n    name: 'Level 2',\n    unlocked: currentLevel >= 2\n  }, {\n    level: 3,\n    name: 'Level 3',\n    unlocked: currentLevel >= 3\n  }, {\n    level: 4,\n    name: 'Level 4',\n    unlocked: currentLevel >= 4\n  }, {\n    level: 5,\n    name: 'Level 5',\n    unlocked: currentLevel >= 5\n  }];\n  const navigate = useNavigate(); // Hook to navigate between pages\n\n  // Handle level button click\n  const handleLevelClick = level => {\n    if (level.unlocked) {\n      // Navigate to the game page for the selected level\n      navigate(`/game?level=${level.level}`);\n    } else {\n      alert('This level is locked. Complete the previous levels first!');\n    }\n  };\n\n  // Retrieve the current level from localStorage on component mount\n  useEffect(() => {\n    const storedLevel = localStorage.getItem('currentLevel');\n    if (storedLevel) {\n      setCurrentLevel(Number(storedLevel)); // Set the current level from stored value\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Banana Game Levels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Choose your level to play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: levels.map((level, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '10px',\n            backgroundColor: level.unlocked ? '#4CAF50' : '#ccc',\n            color: level.unlocked ? 'white' : 'gray',\n            cursor: level.unlocked ? 'pointer' : 'not-allowed',\n            borderRadius: '5px',\n            width: '100%'\n          },\n          onClick: () => handleLevelClick(level),\n          disabled: !level.unlocked,\n          children: level.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Levels, \"w9Ff9cktMn3of+2c1t89oHLhPXU=\", false, function () {\n  return [useNavigate];\n});\n_c = Levels;\nexport default Levels;\nvar _c;\n$RefreshReg$(_c, \"Levels\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Levels","_s","currentLevel","setCurrentLevel","levels","level","name","unlocked","navigate","handleLevelClick","alert","storedLevel","localStorage","getItem","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","margin","padding","backgroundColor","color","cursor","borderRadius","width","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/nadunliyanage/BananaGame/client/src/pages/Levels.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';  // Use navigate hook for routing\n\nconst Levels = () => {\n    const [currentLevel, setCurrentLevel] = useState(1);  // Track current level\n    const levels = [\n        { level: 1, name: 'Level 1', unlocked: true },\n        { level: 2, name: 'Level 2', unlocked: currentLevel >= 2 },\n        { level: 3, name: 'Level 3', unlocked: currentLevel >= 3 },\n        { level: 4, name: 'Level 4', unlocked: currentLevel >= 4 },\n        { level: 5, name: 'Level 5', unlocked: currentLevel >= 5 },\n    ];\n\n    const navigate = useNavigate(); // Hook to navigate between pages\n\n    // Handle level button click\n    const handleLevelClick = (level) => {\n        if (level.unlocked) {\n            // Navigate to the game page for the selected level\n            navigate(`/game?level=${level.level}`);\n        } else {\n            alert('This level is locked. Complete the previous levels first!');\n        }\n    };\n\n    // Retrieve the current level from localStorage on component mount\n    useEffect(() => {\n        const storedLevel = localStorage.getItem('currentLevel');\n        if (storedLevel) {\n            setCurrentLevel(Number(storedLevel));  // Set the current level from stored value\n        }\n    }, []);\n\n    return (\n        <div>\n            <h1>Banana Game Levels</h1>\n            <p>Choose your level to play!</p>\n            <div>\n                {levels.map((level, index) => (\n                    <div key={index} style={{ margin: '10px 0' }}>\n                        <button\n                            style={{\n                                padding: '10px',\n                                backgroundColor: level.unlocked ? '#4CAF50' : '#ccc',\n                                color: level.unlocked ? 'white' : 'gray',\n                                cursor: level.unlocked ? 'pointer' : 'not-allowed',\n                                borderRadius: '5px',\n                                width: '100%',\n                            }}\n                            onClick={() => handleLevelClick(level)}\n                            disabled={!level.unlocked}\n                        >\n                            {level.name}\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Levels;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;EACtD,MAAMS,MAAM,GAAG,CACX;IAAEC,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAC7C;IAAEF,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAEL,YAAY,IAAI;EAAE,CAAC,EAC1D;IAAEG,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAEL,YAAY,IAAI;EAAE,CAAC,EAC1D;IAAEG,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAEL,YAAY,IAAI;EAAE,CAAC,EAC1D;IAAEG,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAEL,YAAY,IAAI;EAAE,CAAC,CAC7D;EAED,MAAMM,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMY,gBAAgB,GAAIJ,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACE,QAAQ,EAAE;MAChB;MACAC,QAAQ,CAAC,eAAeH,KAAK,CAACA,KAAK,EAAE,CAAC;IAC1C,CAAC,MAAM;MACHK,KAAK,CAAC,2DAA2D,CAAC;IACtE;EACJ,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACZ,MAAMe,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACxD,IAAIF,WAAW,EAAE;MACbR,eAAe,CAACW,MAAM,CAACH,WAAW,CAAC,CAAC,CAAC,CAAE;IAC3C;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA;MAAAgB,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjCpB,OAAA;MAAAgB,QAAA,EACKX,MAAM,CAACgB,GAAG,CAAC,CAACf,KAAK,EAAEgB,KAAK,kBACrBtB,OAAA;QAAiBuB,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAS,CAAE;QAAAR,QAAA,eACzChB,OAAA;UACIuB,KAAK,EAAE;YACHE,OAAO,EAAE,MAAM;YACfC,eAAe,EAAEpB,KAAK,CAACE,QAAQ,GAAG,SAAS,GAAG,MAAM;YACpDmB,KAAK,EAAErB,KAAK,CAACE,QAAQ,GAAG,OAAO,GAAG,MAAM;YACxCoB,MAAM,EAAEtB,KAAK,CAACE,QAAQ,GAAG,SAAS,GAAG,aAAa;YAClDqB,YAAY,EAAE,KAAK;YACnBC,KAAK,EAAE;UACX,CAAE;UACFC,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAACJ,KAAK,CAAE;UACvC0B,QAAQ,EAAE,CAAC1B,KAAK,CAACE,QAAS;UAAAQ,QAAA,EAEzBV,KAAK,CAACC;QAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC,GAdHE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClB,EAAA,CAxDID,MAAM;EAAA,QAUSH,WAAW;AAAA;AAAAmC,EAAA,GAV1BhC,MAAM;AA0DZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}